#ifndef UTILS_BASE_HALO
#define UTILS_BASE_HALO
#define GAMMA 1.4

namespace utils{
  int iindex(int boundary){
    switch(boundary){
    case 0:
      return 0;
    case 1:
      return 1;
    case 2:
      return 0;
    case 3:
      return -1;
    default:
    return -100000;
    }
    
  }
  int jindex(int boundary){
    switch(boundary){
    case 0:
      return -1;
    case 1:
      return 0;
    case 2:
      return 1;
    case 3:
      return 0;
    default:
      return -100000;
      
    }
  }
 

  vector convert(cvariables a){
    vector b;
    b.v[0] = a.rho;
    b.v[1] = a.rhou;
    b.v[2] = a.rhov;
    b.v[3] = a.rhow;
    b.v[4] = a.Bx;
    b.v[5] = a.By;
    b.v[6] = a.Bz;
    b.v[7] = a.E;
    return b;
  } 
  
  cvariables convert(vector a){
    cvariables b;
    b.rho = a.v[0];
    b.rhou = a.v[1];
    b.rhov = a.v[2];
    b.rhow = a.v[3];
    b.Bx = a.v[4];
    b.By = a.v[5];
    b.Bz = a.v[6];
    b.E = a.v[7];
    return b;
  }
  

}

namespace math{
  double sqr(double x){
    return x*x;
  }
  
   
  int sgn(double x){
    return x >=0 ?1:-1;  
  }
  
  //Modulus function
  double mod(double x){
    return x < 0 ? -x:x;
  }

  double max(double a, double b){
    return a < b ? b:a;
  }
  double min(double a, double b){
    return a < b ? a:b;
  }

  double average(double a, double b){
    return 0.5*(a + b);
  }
  
  
  
  
}
 
#endif
