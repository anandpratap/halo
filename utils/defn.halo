#ifndef UTILS_DEFN_HALO
#define UTILS_DEFN_HALO
#define GAMMA 1.4
#define EP 0
#define MP 1
#define AM 2
#define AP 3
#define FM 4
#define FP 5
#define SM 6
#define SP 7

struct vector;
struct matrix;

struct vector{
  double v[8];
  
  vector operator-(const vector a){
    vector o;
    for(int i=0;i<8;i++){
      o.v[i] = v[i] - a.v[i];
    }
    return o;
  }

  vector operator*(const matrix A){
    vector c;
    for(int i=0;i<8;i++){
      c.v[i] = 0.0;
      for(int j=0;j<8;j++){
	c.v[i] += A.m[j][i]*v[j];
      }
    }
    return c;
  }
  
};



struct matrix{
  double m[8][8];
  
  vector operator*(const vector a){
    vector c;
    for(int i=0;i<8;i++){
      c.v[i] = 0.0;
      for(int j=0;j<8;j++){
	c.v[i] += m[i][j]*a.v[j];
      }
    }
    return c;
  }

};

struct point{
  double x, y;
};

struct characteristic{
  double eigenvalue;
  vector leigenvector;
  vector reigenvector;
};

struct eigensystem{
  characteristic direction[8];
  matrix R, L;
};

struct variables{
  double u, v, w, Bx, By, Bz, p, p_full, rho, ex1, ex2;
};


struct cvariables{
  double rhou, rhov, rhow, rho, Bx, By, Bz, E, c1, c2;
};

struct scell{
  cvariables cstate;
  point centroid;
  point normal[4];
  double facelength[4];
  point vertex[4];
  vector F[4];
  vector residue;
  double area;
};


#endif
